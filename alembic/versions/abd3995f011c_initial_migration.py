"""Initial migration

Revision ID: abd3995f011c
Revises: 673b714f678c
Create Date: 2025-04-xx xx:xx:xx.xxxxxx  # Gardez la date originale ici

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect, text


# revision identifiers, used by Alembic.
revision: str = 'abd3995f011c'
down_revision: Union[str, None] = '673b714f678c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def column_exists(table_name, column_name):
    """Vérifie si une colonne existe déjà dans la table."""
    bind = op.get_bind()
    inspector = inspect(bind)
    
    # S'assurer que la table existe d'abord
    if table_name not in inspector.get_table_names():
        return False
    
    # Vérifier si la colonne existe
    columns = [col['name'] for col in inspector.get_columns(table_name)]
    return column_name in columns


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Vérifier si la colonne rating existe déjà avant de l'ajouter
    if not column_exists('users', 'rating'):
        op.add_column('users', sa.Column('rating', sa.SMALLINT(), nullable=True))
    
    # Ajouter ici les autres commandes d'upgrade de la migration
    # en les entourant de vérifications si nécessaire
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Vérifier si la colonne rating existe avant de la supprimer
    if column_exists('users', 'rating'):
        op.drop_column('users', 'rating')
    
    # Ajouter ici les autres commandes de downgrade de la migration
    # en les entourant de vérifications si nécessaire
    
    # ### end Alembic commands ###