"""Ajout d'une colonne

Revision ID: 2541bdbe0de5
Revises: abd3995f011c
Create Date: 2025-04-xx xx:xx:xx.xxxxxx  # Gardez la date originale ici

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import inspect, text


# revision identifiers, used by Alembic.
revision: str = '2541bdbe0de5'
down_revision: Union[str, None] = 'abd3995f011c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def column_exists(table_name, column_name):
    """Vérifie si une colonne existe déjà dans la table."""
    bind = op.get_bind()
    inspector = inspect(bind)
    
    # S'assurer que la table existe d'abord
    if table_name not in inspector.get_table_names():
        return False
    
    # Vérifier si la colonne existe
    columns = [col['name'] for col in inspector.get_columns(table_name)]
    return column_name in columns


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Vérifier si la colonne notifications existe déjà avant de l'ajouter
    if not column_exists('users', 'notifications'):
        # Première étape: Ajouter la colonne en autorisant les valeurs NULL
        op.add_column('users', sa.Column('notifications', sa.Boolean(), nullable=True))
        
        # Deuxième étape: Mettre à jour les enregistrements existants avec une valeur par défaut (true)
        op.execute("UPDATE users SET notifications = TRUE")
        
        # Troisième étape: Modifier la colonne pour ne plus autoriser les valeurs NULL
        op.alter_column('users', 'notifications', nullable=False)
    
    # Ajouter ici les autres commandes d'upgrade de la migration
    # en les entourant de vérifications si nécessaire
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Vérifier si la colonne notifications existe avant de la supprimer
    if column_exists('users', 'notifications'):
        op.drop_column('users', 'notifications')
    
    # Ajouter ici les autres commandes de downgrade de la migration
    # en les entourant de vérifications si nécessaire
    
    # ### end Alembic commands ###